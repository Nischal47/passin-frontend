{
  "stats": {
    "suites": 4,
    "tests": 17,
    "passes": 16,
    "pending": 1,
    "failures": 0,
    "start": "2021-06-10T10:40:03.150Z",
    "end": "2021-06-10T10:40:30.106Z",
    "duration": 22965,
    "testsRegistered": 17,
    "passPercent": 94.11764705882354,
    "pendingPercent": 5.882352941176471,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b78cf53f-e304-4279-99f1-7b8a02c4dc40",
      "title": "",
      "fullFile": "cypress/integration/examples/login.spec.js",
      "file": "cypress/integration/examples/login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
          "title": "Login Using Email",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "can fill the form",
              "fullTitle": "Login Using Email can fill the form",
              "timedOut": null,
              "duration": 1827,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"email\"][name=\"email\"]').type(email).should('have.value', email).clear().should('have.value', '');\ncy.get('input[type=\"password\"][name=\"password\"]').type(password);\ncy.get('button[type=\"submit\"]').contains('Login');",
              "err": {},
              "uuid": "e72f79b5-0105-4f85-bf49-9809941c9763",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "requires both email and password",
              "fullTitle": "Login Using Email requires both email and password",
              "timedOut": null,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('button[type=\"submit\"]').click();\ncy.get('.error-text').eq(0).should('have.text', 'Email cannot be empty. Invalid Email.');\ncy.get('.error-text').eq(1).should('have.text', 'Password cannot be empty.Password should be more than 8 characters.');",
              "err": {},
              "uuid": "c69882ca-ec7b-4da4-891f-b5dec0558da4",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "requires email",
              "fullTitle": "Login Using Email requires email",
              "timedOut": null,
              "duration": 499,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"password\"][name=\"password\"]').type(password);\ncy.get('button[type=\"submit\"]').click();\ncy.get('.error-text').should('have.text', 'Email cannot be empty. Invalid Email.');",
              "err": {},
              "uuid": "fd3349d7-8ac3-4755-8801-b38874d11aa0",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "requires password",
              "fullTitle": "Login Using Email requires password",
              "timedOut": null,
              "duration": 572,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"email\"][name=\"email\"]').type(email);\ncy.get('button[type=\"submit\"]').click();\ncy.get('.error-text').should('have.text', 'Password cannot be empty.Password should be more than 8 characters.');",
              "err": {},
              "uuid": "1c8a271a-5b91-4ab3-9c54-45b0763e4aa5",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "requires password greater than 8",
              "fullTitle": "Login Using Email requires password greater than 8",
              "timedOut": null,
              "duration": 798,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"email\"][name=\"email\"]').type(email);\ncy.get('input[type=\"password\"][name=\"password\"]').type('qqqq');\ncy.get('button[type=\"submit\"]').click();\ncy.get('.error-text').should('have.text', 'Password should be more than 8 characters.');",
              "err": {},
              "uuid": "6acf2d30-fd97-4d39-bdfa-4f66a06fc788",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "shows email or password invalid.",
              "fullTitle": "Login Using Email shows email or password invalid.",
              "timedOut": null,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "e2db7e12-4386-4cf9-ab50-62f71c919aa9",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "navigates to homepage on successful login",
              "fullTitle": "Login Using Email navigates to homepage on successful login",
              "timedOut": null,
              "duration": 1209,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('input[type=\"email\"][name=\"email\"]').type(email);\ncy.get('input[type=\"password\"][name=\"password\"]').type(password);\ncy.intercept('POST', 'http://localhost:8080/api/users/login').as('login');\ncy.get('button[type=\"submit\"]').click();\ncy.wait('@login');\ncy.get('.user-name > .sub-title').contains(firstName).should('be.visible');",
              "err": {},
              "uuid": "5f2e26c4-69c9-4c7b-a58b-7444adefa499",
              "parentUUID": "d15f4b6c-8033-4d97-bd70-bae1325a8f6c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "33395234-1247-49a8-b21f-35273301b123",
              "title": "Email Validation",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "requires valid email for email format: asdfghh",
                  "fullTitle": "Login Using Email Email Validation requires valid email for email format: asdfghh",
                  "timedOut": null,
                  "duration": 822,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//first case email with no @ in email\ncy.get('input[type=\"email\"][name=\"email\"]').clear().type(invalidEmail1);\ncy.get('button[type=\"submit\"]').click();\ncy.get('input[type=\"email\"]').then($input => {\n  expect($input[0].validationMessage).to.eq(`Please include an '@' in the email address. '${invalidEmail1}' is missing an '@'.`);\n});\ncy.get('.error-text').eq(0).click().should('have.text', ' Invalid Email.');",
                  "err": {},
                  "uuid": "9d3b94b9-97ec-4b26-9aa4-05d9f311979b",
                  "parentUUID": "33395234-1247-49a8-b21f-35273301b123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "requires valid email for email format: asdfghh@",
                  "fullTitle": "Login Using Email Email Validation requires valid email for email format: asdfghh@",
                  "timedOut": null,
                  "duration": 730,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//second case email with email@ only.\ncy.reload();\ncy.get('input[type=\"email\"][name=\"email\"]').clear().type(invalidEmail2);\ncy.get('button[type=\"submit\"]').click();\ncy.get('input[type=\"email\"]').then($input => {\n  expect($input[0].validationMessage).to.eq(`Please enter a part following '@'. '${invalidEmail2}' is incomplete.`);\n});\ncy.get('.error-text').eq(0).click().should('have.text', ' Invalid Email.');",
                  "err": {},
                  "uuid": "03f32ccc-7a07-4dda-ae78-441786c181ed",
                  "parentUUID": "33395234-1247-49a8-b21f-35273301b123",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "requires valid email for email format: asdfghh@sdfsdf",
                  "fullTitle": "Login Using Email Email Validation requires valid email for email format: asdfghh@sdfsdf",
                  "timedOut": null,
                  "duration": 727,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//third case with no '.com'\ncy.reload();\ncy.get('input[type=\"email\"][name=\"email\"]').clear().type(invalidEmail3);\ncy.get('button[type=\"submit\"]').click();\ncy.get('.error-text').eq(0).should('have.text', ' Invalid Email.');",
                  "err": {},
                  "uuid": "9108339e-6143-4596-a4ec-0cc5de50065f",
                  "parentUUID": "33395234-1247-49a8-b21f-35273301b123",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9d3b94b9-97ec-4b26-9aa4-05d9f311979b",
                "03f32ccc-7a07-4dda-ae78-441786c181ed",
                "9108339e-6143-4596-a4ec-0cc5de50065f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2279,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "e72f79b5-0105-4f85-bf49-9809941c9763",
            "c69882ca-ec7b-4da4-891f-b5dec0558da4",
            "fd3349d7-8ac3-4755-8801-b38874d11aa0",
            "1c8a271a-5b91-4ab3-9c54-45b0763e4aa5",
            "6acf2d30-fd97-4d39-bdfa-4f66a06fc788",
            "5f2e26c4-69c9-4c7b-a58b-7444adefa499"
          ],
          "failures": [],
          "pending": [
            "e2db7e12-4386-4cf9-ab50-62f71c919aa9"
          ],
          "skipped": [],
          "duration": 5188,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6f6288bd-9191-4e07-bb98-0a7f8610596b",
      "title": "",
      "fullFile": "cypress/integration/examples/signup.spec.js",
      "file": "cypress/integration/examples/signup.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "db7e656f-6db0-4884-9603-2e4600f252c1",
          "title": "Registration Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c7585afe-6a51-4d2d-b367-17f125bc9c35",
              "title": "Successful Resgistration",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Test valid signup and Login",
                  "fullTitle": "Registration Test Successful Resgistration Test valid signup and Login",
                  "timedOut": null,
                  "duration": 5874,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.intercept('POST', 'http://localhost:8080/api/users/register').as('signUp');\ncy.get('form').within($form => {\n  cy.get('input[type=\"email\"][name=\"email\"][placeholder=\"Enter email\"]').type(email);\n  cy.get('input[type=\"text\"][name=\"firstName\"][placeholder=\"Enter First Name\"]').type(firstName);\n  cy.get('input[type=\"text\"][name=\"lastName\"][placeholder=\"Enter Last Name\"]').type(lastName);\n  cy.get('input[name=\"dateOfBirth\"][placeholder=\"Enter Date of birth\"]').type('1998-10-25');\n  cy.get('input[type=\"password\"][name=\"password\"][placeholder=\"Enter Password\"]').type(password);\n  cy.get('input[type=\"password\"][name=\"conformPassword\"]').type(password);\n  cy.root().submit();\n});\ncy.wait('@signUp');\ncy.reload();\ncy.get('form').within($form => {\n  cy.get('input[type=\"email\"]').type(email);\n  cy.get('input[type=\"password\"]').type(password);\n  cy.get('.btn').click();\n});\ncy.get('.logo').should('be.visible');\ncy.get('.user-name > .sub-title').contains(firstName).should('be.visible');",
                  "err": {},
                  "uuid": "444e2246-510a-43e7-96e2-2d466946842b",
                  "parentUUID": "c7585afe-6a51-4d2d-b367-17f125bc9c35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "444e2246-510a-43e7-96e2-2d466946842b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 5874,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "bbcf5871-73c7-4df5-8021-0bf8e7762b92",
      "title": "",
      "fullFile": "cypress/integration/examples/userMainPage.spec.js",
      "file": "cypress/integration/examples/userMainPage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bf07211b-b557-4a85-a128-f161297ebbac",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "xhr test: Check GET password response.",
              "fullTitle": "Actions xhr test: Check GET password response.",
              "timedOut": null,
              "duration": 1542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.log(userId);\ncy.wait('@password').should(({\n  request,\n  response\n}) => {\n  // expect(request.url).to.match('/\\/user$/')        // regex aayena\n  expect(request.method).to.equal('GET');\n  expect(response.body).to.have.property('passwordList'); // expect(response.body.passwordList).to.have.lengthOf(3)\n  cy.log(response.body.passwordList);\n});",
              "err": {},
              "uuid": "1c64b297-88a0-4a47-b007-7c2dbfc87147",
              "parentUUID": "bf07211b-b557-4a85-a128-f161297ebbac",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "decrypt last/bottom password",
              "fullTitle": "Actions decrypt last/bottom password",
              "timedOut": null,
              "duration": 3255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//CHECK IF added password is decrypted or not.\ncy.wait('@password').then(resp => {\n  const pwdLength = resp.response.body.passwordList.length;\n  if (pwdLength != 0) {\n    //click on decrypt password button icon\n    cy.get(`:nth-child(${pwdLength}) > :nth-child(5) > .actions > .pointer`).eq(1).click();\n    cy.get('input[name=\"originalPassword\"][type=\"password\"]').type(userDetail.password);\n    cy.intercept('POST', 'http://localhost:8080/api/passwords/decrypt-password').as('getPassword');\n    cy.get('.button-area > .btn').contains('Confirm').click();\n    cy.wait('@getPassword').then(resp => {\n      cy.get(`.content-table > tbody > :nth-child(${pwdLength}) > :nth-child(3) `).should('have.text', resp.response.body.decryptedPassword.password);\n    });\n  } else {\n    cy.log('User doesnot have saved passwords.');\n  }\n});",
              "err": {},
              "uuid": "6be8d275-8e73-4366-aadb-7a63e9ea23c1",
              "parentUUID": "bf07211b-b557-4a85-a128-f161297ebbac",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c64b297-88a0-4a47-b007-7c2dbfc87147",
            "6be8d275-8e73-4366-aadb-7a63e9ea23c1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4797,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "34b18385-7843-4314-aefb-6375600d05ca",
          "title": "Add password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Check for display of latest added password ",
              "fullTitle": "Add password Check for display of latest added password ",
              "timedOut": null,
              "duration": 2480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/');\ncy.fixture('savePassword').then(pwd => {\n  //add new password.\n  cy.request({\n    method: 'POST',\n    'auth': {\n      'bearer': window.localStorage.getItem('token')\n    },\n    //check for user id in pwd.json\n    url: 'http://localhost:8080/api/passwords/save-password',\n    failOnStatusCode: false,\n    body: pwd\n  });\n}); //always check for user id.\ncy.intercept('GET', `http://localhost:8080/api/passwords/get-passwords?user-id=${userId}`).as('password');\ncy.reload();\ncy.wait('@password').then(resp => {\n  expect(resp.response.body).to.have.property('passwordList');\n  const pwdLength = resp.response.body.passwordList.length;\n  cy.log(resp.response.body.passwordList.length);\n  if (pwdLength != 0) {\n    //the latest added password should not be empty.\n    cy.get(`.content-table > tbody > :nth-child(${pwdLength}) > :nth-child(3) `).should('not.be.empty');\n  }\n});",
              "err": {},
              "uuid": "3d48fce4-c6f3-4287-9935-82bc76f5cb13",
              "parentUUID": "34b18385-7843-4314-aefb-6375600d05ca",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d48fce4-c6f3-4287-9935-82bc76f5cb13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2480,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6dee9bb1-f6cf-4301-a050-0f85d398b088",
      "title": "",
      "fullFile": "cypress/integration/examples/dbConnection.spec.js",
      "file": "cypress/integration/examples/dbConnection.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "792bd028-6653-4c46-bedd-185117225fbb",
          "title": "Tasks",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "No param",
              "fullTitle": "Tasks No param",
              "timedOut": null,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task(\"noParam\").then(res => {\n  console.log(res);\n});",
              "err": {},
              "uuid": "f2f76b70-d4d2-4be4-83ef-6489c079aa62",
              "parentUUID": "792bd028-6653-4c46-bedd-185117225fbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Connects database",
              "fullTitle": "Tasks Connects database",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.task(\"getDBDataAsync\").then(res => {\n  cy.log(res);\n  expect(0).to.equal(0);\n});",
              "err": {},
              "uuid": "9db729ce-4ed2-42f7-a6a9-84a120cb57b6",
              "parentUUID": "792bd028-6653-4c46-bedd-185117225fbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Counts Number of credentials stored",
              "fullTitle": "Tasks Counts Number of credentials stored",
              "timedOut": null,
              "duration": 2162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user_id;\ncy.fixture('user').then(resp => {\n  cy.login(resp.email, resp.password);\n  user_id = resp.id;\n  const query = `select count(password) from passwords where user_id=${user_id}`;\n  cy.intercept('GET', `http://localhost:8080/api/passwords/get-passwords?user-id=${user_id}`).as('savedPasswords');\n  cy.visit('/');\n  cy.wait('@savedPasswords').then(resp => {\n    const pwdLength = resp.response.body.passwordList.length;\n    cy.task(\"dbQuery\", query).then(res => {\n      const dbResCount = parseInt(res.rows[0].count);\n      expect(dbResCount).to.equal(pwdLength);\n    });\n  });\n});",
              "err": {},
              "uuid": "3e09c6df-e3c2-4ec2-b3e9-e48562d3dc98",
              "parentUUID": "792bd028-6653-4c46-bedd-185117225fbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f2f76b70-d4d2-4be4-83ef-6489c079aa62",
            "9db729ce-4ed2-42f7-a6a9-84a120cb57b6",
            "3e09c6df-e3c2-4ec2-b3e9-e48562d3dc98"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2347,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}